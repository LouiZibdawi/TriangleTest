{"version":3,"sources":["utils/checkStore.js","reducers.js","utils/reducerInjectors.js","utils/injectReducer.js","containers/HomePage/constants.js","containers/HomePage/reducer.js","components/equilateralTriangle/index.js","components/isoscelesTriangle/index.js","components/scaleneTriangle/index.js","containers/HomePage/selectors.js","containers/HomePage/index.js","containers/HomePage/actions.js","containers/NotFoundPage/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["checkStore","store","shape","dispatch","isFunction","subscribe","getState","replaceReducer","runSaga","injectedReducers","isObject","injectedSagas","invariant","conformsTo","routeInitialState","fromJS","location","routeReducer","state","arguments","length","undefined","action","type","LOCATION_CHANGE","merge","payload","injectReducerFactory","isValid","key","reducer","isString","isEmpty","Reflect","has","combineReducers","Object","objectSpread","route","CHANGE_SIDE","SHOW_TRIANGLE","SHOW_INVALID_INPUT_ERROR","initialState","side1","side2","side3","isEquilateralTriangle","isIsoscelesTriangle","isScaleneTriangle","isInvalidInput","homeReducer","actionTypes","set","sideName","sideVal","isTriangle","show","EquilateralTriangle","react_default","a","createElement","className","style","display","src","alt","React","Component","IsoscelesTriangle","scaleneTriangle","selectHome","get","HomePage","_React$PureComponent","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","value","_this$props","props","numMatches","parseFloat","displayResult","showInvalidInputError","showTriangle","id","onSubmit","calculateTriangle","name","placeholder","onChange","onChangeInput","equilateralTriangle","isoscelesTriangle","components_scaleneTriangle","PureComponent","mapStateToProps","createStructuredSelector","createSelector","homeState","withConnect","connect","evt","target","actions","withReducer","_ref","WrappedComponent","ReducerInjector","_React$Component","_getPrototypeOf2","_this","_len","args","Array","_key","call","concat","injectors","context","injectReducer","contextTypes","PropTypes","object","isRequired","displayName","hoistNonReactStatics","compose","NotFound","Footer","href","App","BrowserRouter","Switch","Route","exact","path","component","NotFoundPage","components_Footer","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0b0ccb94.chunk.js","sourcesContent":["import { conformsTo, isFunction, isObject } from 'lodash';\nimport invariant from 'invariant';\n\n/**\n * Validate the shape of redux store\n */\nexport default function checkStore(store) {\n  const shape = {\n    dispatch: isFunction,\n    subscribe: isFunction,\n    getState: isFunction,\n    replaceReducer: isFunction,\n    runSaga: isFunction,\n    injectedReducers: isObject,\n    injectedSagas: isObject,\n  };\n  invariant(\n    conformsTo(store, shape),\n    '(app/utils...) injectors: Expected a valid redux store',\n  );\n}\n","/**\n * Combine all reducers in this file and export the combined reducers.\n */\n\nimport { fromJS } from 'immutable';\nimport { combineReducers } from 'redux-immutable';\nimport { LOCATION_CHANGE } from 'react-router-redux';\n\n/*\n * routeReducer\n *\n * The reducer merges route location changes into our immutable state.\n * The change is necessitated by moving to react-router-redux@5\n *\n */\n\n// Initial routing state\nconst routeInitialState = fromJS({\n  location: null,\n});\n\n/**\n * Merge route into the global application state\n */\nfunction routeReducer(state = routeInitialState, action) {\n  switch (action.type) {\n    /* istanbul ignore next */\n    case LOCATION_CHANGE:\n      return state.merge({\n        location: action.payload,\n      });\n    default:\n      return state;\n  }\n}\n\n/**\n * Creates the main reducer with the dynamically injected ones\n */\nexport default function createReducer(injectedReducers) {\n  return combineReducers({\n    route: routeReducer,\n    ...injectedReducers,\n  });\n}\n","import invariant from 'invariant';\nimport { isEmpty, isFunction, isString } from 'lodash';\n\nimport checkStore from './checkStore';\nimport createReducer from '../reducers';\n\nexport function injectReducerFactory(store, isValid) {\n  return function injectReducer(key, reducer) {\n    if (!isValid) checkStore(store);\n\n    invariant(\n      isString(key) && !isEmpty(key) && isFunction(reducer),\n      '(app/utils...) injectReducer: Expected `reducer` to be a reducer function',\n    );\n\n    // Check `store.injectedReducers[key] === reducer` for hot reloading when a key is the same but a reducer is different\n    if (\n      Reflect.has(store.injectedReducers, key) &&\n      store.injectedReducers[key] === reducer\n    )\n      return;\n\n    store.injectedReducers[key] = reducer; // eslint-disable-line no-param-reassign\n    store.replaceReducer(createReducer(store.injectedReducers));\n  };\n}\n\nexport default function getInjectors(store) {\n  checkStore(store);\n\n  return {\n    injectReducer: injectReducerFactory(store, true),\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n\nimport getInjectors from './reducerInjectors';\n\n/**\n * Dynamically injects a reducer\n *\n * @param {string} key A key of the reducer\n * @param {function} reducer A reducer that will be injected\n *\n */\nexport default ({ key, reducer }) => WrappedComponent => {\n  class ReducerInjector extends React.Component {\n    static WrappedComponent = WrappedComponent;\n\n    static contextTypes = {\n      store: PropTypes.object.isRequired,\n    };\n\n    static displayName = `withReducer(${WrappedComponent.displayName ||\n      WrappedComponent.name ||\n      'Component'})`;\n\n    componentWillMount() {\n      const { injectReducer } = this.injectors;\n\n      injectReducer(key, reducer);\n    }\n\n    injectors = getInjectors(this.context.store);\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  return hoistNonReactStatics(ReducerInjector, WrappedComponent);\n};\n","export const CHANGE_SIDE = 'TriangleTest/HomePage/CHANGE_SIDE';\n\nexport const SHOW_TRIANGLE = 'TriangleTest/HomePage/SHOW_TRIANGLE';\n\nexport const SHOW_INVALID_INPUT_ERROR = 'TriangleTest/HomePage/SHOW_INVALID_INPUT_ERROR';","/*\n * HomeReducer\n *\n * The reducer takes care of our data. Using actions, we can change our\n * application state.\n * To add a new action, add it to the switch statement in the reducer function\n *\n * Example:\n * case YOUR_ACTION_CONSTANT:\n *   return state.set('yourStateVariable', true);\n */\nimport { fromJS } from 'immutable';\n\nimport * as actionTypes from './constants';\n\n// The initial state of the App\nexport const initialState = fromJS({\n  side1: '',\n  side2: '',\n  side3: '',\n  isEquilateralTriangle: false,\n  isIsoscelesTriangle: false,\n  isScaleneTriangle: false,\n  isInvalidInput: false,\n});\n\nfunction homeReducer(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.CHANGE_SIDE:\n      return state.set(action.sideName, action.sideVal);\n    case actionTypes.SHOW_TRIANGLE:\n      return state.set(action.isTriangle, action.show);\n    case actionTypes.SHOW_INVALID_INPUT_ERROR:\n      return state.set('isInvalidInput', action.show);\n    default:\n      return state;\n  }\n}\n\nexport default homeReducer;\n","import React from 'react';\nimport './style.css';\n\nclass EquilateralTriangle extends React.Component { // eslint-disable-line react/prefer-stateless-function\n  render() {\n    return (\n      <div className=\"equilateralTriangle\" style={{display: 'inline'}}>\n        <h3> You have entered in the dimensions of an <b>Equilateral Triangle</b></h3>\n        <p> All three sides are the same length!</p>\n        <br></br>\n        <img src=\"https://gdurl.com/WPNn\" alt=\"Equilateral Triangle\" />\n      </div>\n    );\n  }\n}\n\nexport default EquilateralTriangle;","import React from 'react';\nimport './style.css';\n\nclass IsoscelesTriangle extends React.Component { // eslint-disable-line react/prefer-stateless-function\n  render() {\n    return (\n      <div className=\"isoscelesTriangle\" style={{display: 'inline'}}>\n        <h3> You have entered in the dimensions of an <b>Isosceles Triangle</b></h3>\n        <p> Two of the three sides are the same length!</p>\n        <br></br>\n        <img src=\"https://gdurl.com/OvpW\" alt=\"Isosceles Triangle\" />\n      </div>\n    );\n  }\n}\n\nexport default IsoscelesTriangle;","import React from 'react';\nimport './style.css';\n\nclass scaleneTriangle extends React.Component { // eslint-disable-line react/prefer-stateless-function\n  render() {\n    return (\n      <div className=\"scaleneTriangle\" style={{display: 'inline'}}>\n        <h3> You have entered in the dimensions of a <b>Scalene Triangle</b></h3>\n        <p> None of the sides are the same length!</p>\n        <br></br>\n        <img src=\"https://gdurl.com/sM78\" alt=\"Scalene Triangle\" />\n      </div>\n    );\n  }\n}\n\nexport default scaleneTriangle;","/**\n * Homepage selectors\n */\n\nimport { createSelector } from 'reselect';\nimport initialState from './reducer';\n\nconst selectHome = (state) => state.get('home', initialState);\n\nconst makeSelectSide1 = () => createSelector(\n  selectHome,\n  (homeState) => homeState.get('side1')\n);\nconst makeSelectSide2 = () => createSelector(\n  selectHome,\n  (homeState) => homeState.get('side2')\n);\n\nconst makeSelectSide3 = () => createSelector(\n  selectHome,\n  (homeState) => homeState.get('side3')\n);\n\nconst makeSelectShowET = () => createSelector(\n  selectHome,\n  (homeState) => homeState.get('isEquilateralTriangle')\n);\nconst makeSelectShowIT = () => createSelector(\n  selectHome,\n  (homeState) => homeState.get('isIsoscelesTriangle')\n);\n\nconst makeSelectShowST = () => createSelector(\n  selectHome,\n  (homeState) => homeState.get('isScaleneTriangle')\n);\n\nconst makeSelectShowError = () => createSelector(\n  selectHome,\n  (homeState) => homeState.get('isInvalidInput')\n);\n\n\nexport {\n  selectHome,\n  makeSelectShowET,\n  makeSelectShowIT,\n  makeSelectShowST,\n  makeSelectSide1,\n  makeSelectSide2,\n  makeSelectSide3,\n  makeSelectShowError,\n};\n","/*\n * HomePage\n *\n * This is the first thing users see of our App, at the '/' route\n */\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport injectReducer from '../../utils/injectReducer';\nimport reducer from './reducer';\nimport PropTypes from 'prop-types';\nimport './style.css';\nimport EquilateralTriangle from '../../components/equilateralTriangle';\nimport IsoscelesTriangle from '../../components/isoscelesTriangle';\nimport ScaleneTriangle from '../../components/scaleneTriangle';\nimport * as selectors from './selectors';\nimport * as actions from './actions';\n\nexport class HomePage extends React.PureComponent { // eslint-disable-line react/prefer-stateless-function\n  /** \n   * calculateTriangle - Gets the 3 sides currently entered and checks how many of them match\n   *  @params\n   *    - side1, side2, side3 (string): The values in the input boxes\n   *  @props / @functions\n   *    - showInvalidInputError (func): action to hide or show the input error message\n   *    - showTriangle (func): action to hide or show triangle results\n   *  @output\n   *    - Error check the inputs and hide/show error messages\n   */\n  calculateTriangle() {\n    const { side1, side2, side3  } = this.props;\n    let numMatches = 0;\n\n    //Check to see if all three input boxes are filled\n    if(side1 != 0 && side1 != '' && side2 != 0 && \n      side2 != '' && side3 != 0 && side3 != '') {\n\n      //Check to see if all three sides are floats. If yes, compare all sides and find how many are equal\n      if(parseFloat(side1) && parseFloat(side2) && parseFloat(side3)) {\n        if(side1 == side2) \n          numMatches++;\n        if(side1 == side3)\n          numMatches++;\n        if(side2 == side3)\n          numMatches++;\n        \n        //Display the triangle depending on the number of matches found\n        this.displayResult(numMatches);\n      }\n      else {\n        this.props.showInvalidInputError(true);\n\n        //Have to hide all triangles in case they go from successful input to error\n        this.props.showTriangle('isEquilateralTriangle', false);\n        this.props.showTriangle('isIsoscelesTriangle', false);\n        this.props.showTriangle('isScaleneTriangle', false);\n      }\n    }\n    else { //Hide everything until everything is filled\n      this.props.showInvalidInputError(false);\n      this.props.showTriangle('isEquilateralTriangle', false);\n      this.props.showTriangle('isIsoscelesTriangle', false);\n      this.props.showTriangle('isScaleneTriangle', false);\n    } \n  }\n\n  /**\n   * displayResult\n   *  @params\n   *    - numMatches (int): Takes in the number of side pairs that match (0, 1 or 3)\n   *  @props / @functions\n   *    - showInvalidInputError (func): action to hide or show the input error message\n   *    - showTriangle (func): action to hide or show triangle results\n   *  @output\n   *    - Depending on the number of matches, hide and show different triangle result cards\n   */\n\n  displayResult(numMatches) {\n    //Valid input so hide the input error\n    this.props.showInvalidInputError(false);\n\n    switch(numMatches) {\n      case 0: //No sides are the same (Scalene)\n        this.props.showTriangle('isEquilateralTriangle', false);\n        this.props.showTriangle('isIsoscelesTriangle', false);\n        this.props.showTriangle('isScaleneTriangle', true);\n        break;\n      case 1: //One match so two sides are the same (Isosceles)\n        this.props.showTriangle('isEquilateralTriangle', false);\n        this.props.showTriangle('isIsoscelesTriangle', true);\n        this.props.showTriangle('isScaleneTriangle', false);\n        break;\n      case 3: //3 matches so all 3 sides are the same (Equilateral)\n        this.props.showTriangle('isEquilateralTriangle', true);\n        this.props.showTriangle('isIsoscelesTriangle', false);\n        this.props.showTriangle('isScaleneTriangle', false);\n        break;\n      default:\n        return;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"homePage\">\n        <br></br>\n        <h2> Welcome to my triangle testing website</h2>\n        <br></br>\n        <p> I hope you enjoy this highly complex and highly challenging algorithm that I have made. \n          Please enter 3 sides of a triangle below. When the algorithm is complete \n          you will see what type of triangle you have made below</p>\n        <form id=\"inputVals\" onSubmit={this.calculateTriangle()}>\n          <input name=\"side1\" className=\"form-control\" type=\"text\" placeholder=\"Side #1\" onChange={this.props.onChangeInput}/>\n          <input name=\"side2\" className=\"form-control\" type=\"text\" placeholder=\"Side #2\" onChange={this.props.onChangeInput}/>\n          <input name=\"side3\" className=\"form-control\" type=\"text\" placeholder=\"Side #3\" onChange={this.props.onChangeInput}/>\n        </form>\n\n        {/* Beyond this point is for the output of the algorithm. Either show an equilateral, \n        isosceles or scalene triangle.. or an invalid input message if the input is invalid*/}\n        {this.props.isEquilateralTriangle &&\n          <EquilateralTriangle></EquilateralTriangle>\n        }\n        {this.props.isIsoscelesTriangle &&\n          <IsoscelesTriangle></IsoscelesTriangle>\n        }\n        {this.props.isScaleneTriangle &&\n          <ScaleneTriangle></ScaleneTriangle>\n        }\n        {this.props.isInvalidInput &&\n          <div>\n            <h3> You have entered invalid input.</h3>\n            <p> Please only enter 3 numbers (integers or decimals work)</p>\n            <img src=\"https://gdurl.com/AiQm\" alt=\"MJ Meme\"/>\n          </div>\n        }\n        <br></br>\n        <br></br>\n        <br></br>\n      </div>\n    );\n  }\n}\n\nHomePage.propTypes = {\n  side1: PropTypes.string,\n  side2: PropTypes.string,\n  side3: PropTypes.string,\n\n  isEquilateralTriangle: PropTypes.bool,\n  isIsoscelesTriangle: PropTypes.bool,\n  isScaleneTriangle: PropTypes.bool,\n  isInvalidInput: PropTypes.bool,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChangeInput: (evt) => dispatch(actions.changeSide(evt.target.name, evt.target.value)),\n  showInvalidInputError: (show) => dispatch(actions.showInvalidInputError(show)),\n  showTriangle: (isTriangle, show) => dispatch(actions.showTriangle(isTriangle, show)),\n});\n\nconst mapStateToProps = createStructuredSelector({\n  isEquilateralTriangle: selectors.makeSelectShowET(),\n  isIsoscelesTriangle: selectors.makeSelectShowIT(),\n  isScaleneTriangle: selectors.makeSelectShowST(),\n\n  isInvalidInput: selectors.makeSelectShowError(),\n\n  side1: selectors.makeSelectSide1(),\n  side2: selectors.makeSelectSide2(),\n  side3: selectors.makeSelectSide3(),\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\n\nconst withReducer = injectReducer({ key: 'home', reducer });\n\nexport default compose(withReducer, withConnect)(HomePage);\n","/*\n * Home Actions\n *\n * Actions change things in your application\n * Since this boilerplate uses a uni-directional data flow, specifically redux,\n * we have these actions which are the only way your application interacts with\n * your application state. This guarantees that your state is up to date and nobody\n * messes it up weirdly somewhere.\n *\n * To add a new Action:\n * 1) Import your constant\n * 2) Add a function like this:\n *    export function yourAction(var) {\n *        return { type: YOUR_ACTION_CONSTANT, var: var }\n *    }\n */\n\nimport * as actionTypes from './constants';\n\n/**\n * Changes the input field of the form\n *\n * @param  {name} name The new text of the input field\n *\n * @return {object}    An action object with a type of CHANGE_USERNAME\n */\n\nexport function changeSide(sideName, sideVal) {\n  return {\n    type: actionTypes.CHANGE_SIDE,\n    sideName,\n    sideVal,\n  }\n}\n\nexport function showTriangle(isTriangle, show) {\n  return {\n    type: actionTypes.SHOW_TRIANGLE,\n    isTriangle,\n    show\n  }\n}\n\nexport function showInvalidInputError(show) {\n  return {\n    type: actionTypes.SHOW_INVALID_INPUT_ERROR,\n    show\n  }\n}\n\n","/**\n * NotFoundPage\n *\n * This is the page we show when the user visits a url that doesn't have a route\n */\n\nimport React from 'react';\nimport './style.css';\n\nexport default function NotFound() {\n  return (\n    <article>\n      <h1>Page not found.</h1>\n    </article>\n  );\n}\n","import React from 'react';\nimport './styles.css';\n\nconst Footer = () => (\n  <footer className=\"footer-distributed\">\n    <div className=\"footer-right\">\n      <a href=\"https://www.linkedin.com/in/loui-zibdawi-885186124/\" target=\"_blank\"><i className=\"fa fa-linkedin\"></i></a>\n      <a href=\"https://github.com/LouiZibdawi/TriangleTest\" target=\"_blank\"><i className=\"fa fa-github\"></i></a>\n    </div>\n    <div className=\"footer-left\">\n      <p>Loui Zibdawi &copy; 2019</p>\n    </div>\n  </footer>\n);\n\nexport default Footer;","/**\n *\n * App\n *\n * This component is the skeleton around the actual pages, and should only\n * contain code that should be seen on all pages. (e.g. navigation bar)\n */\n\nimport React from 'react';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\nimport HomePage from './containers/HomePage';\nimport NotFoundPage from './containers/NotFoundPage';\nimport Footer from './components/Footer';\n\nimport './App.css';\n\nconst App = () => (\n  <div className=\"app-wrapper\">\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route path=\"\" component={NotFoundPage} />\n      </Switch>\n    </BrowserRouter>\n    <Footer />\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('app'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}